@using System.Linq
@model Quiz

@{
    ViewData["Title"] = Model.Name;
    int count = 0;
    List<Reply> replies = ViewBag.replies;
}

<h2>
    @Model.Name
    @if (replies.Any())
    {
        <span class="badge badge-primary badge-pill" style="float: right;">@(replies.Count(x=>x.Alternative.IsCorrect))/@(Model.Questions.Count())</span>
    }
</h2>
<br />
@if (replies.Any())
{
    foreach (var question in Model.Questions)
    {
        count++;
        <div class="card">
            <h5 class="card-header">Question @(count)</h5>
            <div class="card-body">
                <h5 class="card-title">@(question.Description)</h5>
                <br />
                <ul class="list-group list-group-flush">

                    @foreach (var alternative in question.Alternatives)
                    {
                        var reply = replies.FirstOrDefault(x => alternative.IdAlternative == x.IdAlternative);

                        <li class="list-group-item">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="@(alternative.IdQuestion)" id="Id@(alternative.IdAlternative)" value="@(alternative.IdAlternative)" disabled @(reply != null ? "checked" : "")>
                                <label class="form-check-label" for="Id@(alternative.IdAlternative)">
                                    @(alternative.Description)
                                </label>
                                @if (alternative.IsCorrect)
                                {
                                    <span class="badge badge-success badge-pill" style="float: right;">Correct</span>
                                }
                                else if (reply != null)
                                {
                                    <span class="badge badge-danger badge-pill" style="float: right;">Wrong</span>
                                }
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <br />
    }
}
else
{
    foreach (var question in Model.Questions)
    {
        count++;
        <div class="card">
            <h5 class="card-header">Question @(count)</h5>
            <div class="card-body">
                <h5 class="card-title">@(question.Description)</h5>
                <br />
                <ul class="list-group list-group-flush">

                    @foreach (var alternative in question.Alternatives)
                    {
                        <li class="list-group-item">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="@(alternative.IdQuestion)" id="Id@(alternative.IdAlternative)" value="@(alternative.IdAlternative)">
                                <label class="form-check-label" for="Id@(alternative.IdAlternative)">
                                    @(alternative.Description)
                                </label>
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <br />
    }
    <div class="form-group">
        <input type="button" value="Submit" class="btn btn-primary" onclick="submitAlternatives()" />
    </div>

    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        window.IdsQuestions = @Json.Serialize(Model.Questions.Select(x => x.IdQuestion));

        function submitAlternatives() {

            for (var i = 0; i < window.IdsQuestions.length; i++) {
                var value = $('input[name="' + window.IdsQuestions[i] + '"]:checked').val();
                if (!value) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Please answer all questions!'
                    });
                    return;
                }
            }

            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, submit it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var data = {
                        'idsAlternatives': $.map($('input[type="radio"]:checked'),
                            function(n) {
                                return n.value;
                            })
                    }

                    $.post("@(Url.Action("New", "Replies"))",
                        data,
                        function(resp) {
                            Swal.fire(
                                'Submitted!',
                                'Questionnaire sent.',
                                'success'
                            ).then(() => {
                                location.reload();
                            });
                        }
                    );
                }
            });
        }
    </script>
}